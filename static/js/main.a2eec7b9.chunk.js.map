{"version":3,"sources":["Components/Contentbar/Profile/ProfileInfo.module.css","Components/Contentbar/Users/Paginator.module.css","Components/Contentbar/Users/Users.module.css","Components/Header/Header.module.css","Components/Footer/Footer.module.css","Components/Login/Login.module.css","Components/Images/avatar.svg","Components/Leftbar/Navbar.module.css","Components/Images/Preloader.module.css","Components/Images/github-logo_icon-2.svg","Components/Images/vk-icon.svg","Components/Contentbar/MainContainer.module.css","api/api.js","redux/authReducer.js","Components/Header/Header.jsx","Components/Footer/Footer.jsx","redux/profileReducer.js","redux/usersReducer.js","redux/store.js","Components/Leftbar/Navbar.jsx","Components/Contentbar/Profile/ProfileStatus.jsx","Components/Contentbar/Profile/ProfileContacts.jsx","Components/Contentbar/Profile/ProfileInfo.jsx","Components/Hooks/LoginHook.jsx","Components/Images/Preloader.jsx","Components/Contentbar/Profile/Profile.jsx","Components/Contentbar/Users/User.jsx","Components/Contentbar/Users/Paginator.jsx","Components/Contentbar/Users/Users.jsx","validators/validatorLogin.js","Components/Login/Login.jsx","Components/Contentbar/MainContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","instance","axios","baseURL","withCredentials","headers","authAPI","get","email","password","rememberMe","captcha","post","delete","profileAPI","id","alteredProfile","put","status","photoFile","formData","FormData","append","userAPI","page","friend","term","count","userId","securityAPI","initialState","login","isAuth","isLoading","captchaURL","errorSubmit","setAuthUserData","type","userData","setIsLoading","authReducer","state","action","url","error","connect","auth","LogoutThunk","dispatch","then","response","data","resultCode","catch","console","log","props","logout","e","className","style","header","loginButton","onClick","to","menuBurger","burger","menuList","Footer","footer","icon","href","src","vk_icon","alt","github_icon","git_icon","profile","setProfileData","setStatusData","getStatusThunk","profileReducer","contacts","photos","users","totalCount","setUsers","setTotalCount","setFollowed","follow","usersReducer","map","item","followed","reducers","combineReducers","profilePage","usersPage","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","window","Navbar","nav","activeClassName","activeButton","authId","setStatusThunk","useState","setStatus","editMode","setEditMode","useEffect","value","onChange","target","onBlur","autoFocus","onDoubleClick","ProfileContacts","aboutMe","lookingForAJob","lookingForAJobDescription","Object","keys","key","ProfileContactsForm","setProfileChange","formik","useFormik","initialValues","facebook","website","vk","twitter","instagram","youtube","github","mainLink","onSubmit","values","onChangeRadio","name","handleSubmit","htmlFor","handleChange","handleBlur","defaultChecked","button","ContactsContainer","isOwner","isEditMode","ProfileInfo","large","largePhoto","setLargePhoto","profileInfo","photoBox","photo","avatar","changePhotoButton","files","length","setPhotoThunk","label","infoBox","fullName","LoginHook","Component","Preloader","loadBox","ldsDualRing","Profile","React","memo","match","params","setUserId","setIsOwner","authUserId","setProfileThunk","setProfileChangeThunk","compose","withRouter","profileChange","getState","newPhotos","User","followProgress","setFollowProgress","userGrid","userElem","followButton","setFollowedThunk","disabled","Paginator","countPages","Math","ceil","pages","onClickPage","numberOfPage","Number","textContent","onSetPage","i","currentPage","push","countPortions","portion","setPortion","lastPortionPage","portionsPages","paginatorBox","isSettingFollow","getUsersThunk","items","setPage","user","small","validator","errors","test","LoginThunk","captchaUrl","err","messages","validate","gridBox","touched","MainContainer","this","authUserThunk","main","exact","from","path","render","PureComponent","App","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a2eec7b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__1P5Hk\",\"photoBox\":\"ProfileInfo_photoBox__3hxBO\",\"photo\":\"ProfileInfo_photo__Dswa3\",\"infoBox\":\"ProfileInfo_infoBox__2J4s4\",\"contacts\":\"ProfileInfo_contacts__2uQGR\",\"button\":\"ProfileInfo_button__1j9hy\",\"changePhotoButton\":\"ProfileInfo_changePhotoButton__3I_q_\",\"label\":\"ProfileInfo_label__D5Bjh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginatorBox\":\"Paginator_paginatorBox__11NSL\",\"pages\":\"Paginator_pages__1bTGj\",\"button\":\"Paginator_button__Zv7H3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userGrid\":\"Users_userGrid__25k23\",\"userElem\":\"Users_userElem__BBPRL\",\"followButton\":\"Users_followButton__2jKvV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VmKP\",\"loginButton\":\"Header_loginButton__34TUz\",\"menuBurger\":\"Header_menuBurger__lsRup\",\"burger\":\"Header_burger__3zsFT\",\"menuList\":\"Header_menuList__1wyqA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2oYbL\",\"icon\":\"Footer_icon__2JPwi\",\"vk_icon\":\"Footer_vk_icon__1taNp\",\"git_icon\":\"Footer_git_icon__2iCIl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridBox\":\"Login_gridBox__20x2p\",\"error\":\"Login_error__1StN3\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.b6af28a5.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__30ZrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadBox\":\"Preloader_loadBox__2vc1i\",\"ldsDualRing\":\"Preloader_ldsDualRing__2ccPD\"};","module.exports = __webpack_public_path__ + \"static/media/github-logo_icon-2.76d344f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/vk-icon.70cc8ed5.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"MainContainer_main__1_gRS\"};","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '33535a47-115a-49b0-a0bc-a497e771ba13'\r\n    }\r\n});\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get('auth/me')      \r\n    },\r\n    login(email, password, rememberMe=false, captcha='') {\r\n        return instance.post('auth/login', {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(id) {\r\n        return instance.get(`profile/${id}`)\r\n    },\r\n    setProfile(alteredProfile) {\r\n        return instance.put(`profile`, alteredProfile)\r\n    },\r\n    getStatus(id) {\r\n        return instance.get(`profile/status/${id}`)\r\n    },\r\n    setStatus(status) {\r\n        return instance.put(`profile/status`, {status})\r\n    },\r\n    setPhoto(photoFile) {\r\n        let formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put(`profile/photo`, formData)\r\n    }\r\n};\r\n\r\nexport const userAPI = {\r\n    getUsers(page, friend, term, count) {\r\n        return instance.get(`users?page=${page}&count=${count}&friend=${friend}&term=${term}`);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    }\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get('security/get-captcha-url')\r\n    }\r\n}","import { authAPI, securityAPI } from '../api/api';\r\n\r\nconst SET_USER = 'SET-USER';\r\nconst SET_IS_LOADING = 'SET-IS-LOADING';\r\nconst SET_CAPTCHA_URL = 'SET-CAPTCHA-URL';\r\nconst SET_ERROR_SUBMIT = 'SET-ERROR-SUBMIT';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    isLoading: true,\r\n    captchaURL: null,\r\n    errorSubmit: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER:\r\n            return {\r\n                ...state,\r\n                ...action.userData,\r\n                isAuth: action.isAuth\r\n            }\r\n        case SET_IS_LOADING: \r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n        case SET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                captchaURL: action.url\r\n            }\r\n        case SET_ERROR_SUBMIT: \r\n            return {\r\n                ...state,\r\n                errorSubmit: action.error\r\n            }\r\n        default: return state\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER, userData: { userId, email, login }, isAuth });\r\nexport const setIsLoading = (isLoading) => ({ type: SET_IS_LOADING, isLoading });\r\nexport const setCaptchaUrl = (url) => ({ type: SET_CAPTCHA_URL, url });\r\nexport const setErrorSubmit = (error) =>({type: SET_ERROR_SUBMIT, error});\r\n\r\nexport const authUserThunk = () => {\r\n    return (dispatch) => {\r\n        dispatch(setIsLoading(true));\r\n        authAPI.me().then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let { id, email, login } = response.data.data;\r\n                dispatch(setAuthUserData(id, email, login, true));\r\n            }\r\n            dispatch(setIsLoading(false));\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n};\r\n\r\nexport const LoginThunk = ({email, password, rememberMe, captcha}) => {\r\n    return (dispatch) => {\r\n        dispatch(setIsLoading(true));\r\n        authAPI.login(email, password, rememberMe, captcha).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                authAPI.me().then(response => {\r\n                    if (response.data.resultCode === 0) {\r\n                        let { id, email, login } = response.data.data;\r\n                        dispatch(setAuthUserData(id, email, login, true));\r\n                    }\r\n                    dispatch(setIsLoading(false));\r\n                }).catch(error => {\r\n                    console.log(error);\r\n                })\r\n            } else if (response.data.resultCode === 10) {\r\n                securityAPI.getCaptchaUrl().then(response => {\r\n                    let captchaUrl = response.data.url;\r\n                    dispatch(setCaptchaUrl(captchaUrl));\r\n                    dispatch(setIsLoading(false));\r\n                })\r\n            } else {\r\n                let err = response.data.messages;\r\n                dispatch(setErrorSubmit(err));\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n};\r\n\r\nexport const LogoutThunk = () => {\r\n    return (dispatch) => {\r\n        dispatch(setIsLoading(true));\r\n        authAPI.logout().then(response => {\r\n            if(response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false));\r\n            }\r\n            dispatch(setIsLoading(false));\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React, { useState } from 'react';\r\nimport style from './Header.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { LogoutThunk } from '../../redux/authReducer';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n\r\n    let logout = (e) => {\r\n        props.LogoutThunk();\r\n    };\r\n\r\n    return (\r\n        <div className={style.header}>\r\n            {props.isAuth\r\n                ? <div className={style.loginButton} onClick={logout}><button>Выйти</button></div>\r\n                : <div className={style.loginButton}>\r\n                    <NavLink to='/login'><button>Войти</button></NavLink></div>\r\n            }\r\n            <div className={style.menuBurger}>\r\n                <div className={style.burger}></div>\r\n                <div className={style.menuList}>\r\n                    <NavLink to='/profile'><div>Мой профиль</div></NavLink>\r\n                    <NavLink to='/users'><div>Пользователи</div></NavLink>\r\n                    {props.isAuth\r\n                        ? <NavLink to='/login' onClick={logout}><div>Выйти</div></NavLink>\r\n                        : <NavLink to='/login'><div>Войти</div></NavLink>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { LogoutThunk })(Header);","import React from 'react';\r\nimport style from './Footer.module.css';\r\nimport github_icon from '../Images/github-logo_icon-2.svg';\r\nimport vk_icon from '../Images/vk-icon.svg';\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <div className={style.footer}>\r\n            <div className={style.icon}>\r\n                <a href=\"https://vk.com/id327824311\"><img src={vk_icon} alt='vk_icon' className={style.vk_icon}/></a>\r\n            </div>\r\n            <div className={style.icon}>\r\n                <a href=\"https://github.com/EfanovNikita\"><img src={github_icon} alt='git_icon' className={style.git_icon}/></a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import { profileAPI } from \"../api/api\";\r\n\r\nconst SET_PROFILE = 'SET-PROFILE';\r\nconst SET_STATUS = 'SET-STATUS';\r\nconst SET_PHOTOS = 'SET-PHOTOS';\r\n\r\nlet initialState = {\r\n    profile: '',\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...action.profile,\r\n                    contacts: { ...action.profile.contacts },\r\n                    photos: { ...action.profile.photos }\r\n                }\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SET_PHOTOS:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        default: return state\r\n    }\r\n};\r\n\r\nexport const setProfileData = (profile) => ({ type: SET_PROFILE, profile });\r\nexport const setStatusData = (status) => ({ type: SET_STATUS, status });\r\nexport const savePhotoSuccess = (photos) => ({ type: SET_PHOTOS, photos });\r\n\r\nexport const setProfileThunk = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getProfile(userId).then(response => {\r\n            let profile = response.data;\r\n            dispatch(setProfileData(profile))\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n};\r\n\r\nexport const getStatusThunk = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatus(userId).then(response => {\r\n            dispatch(setStatusData(response.data))\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n};\r\n\r\nexport const setStatusThunk = (status) => {\r\n    return (dispatch) => {\r\n        profileAPI.setStatus(status).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatusData(status))\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n};\r\n\r\nexport const setProfileChangeThunk = (profileChange) => {  \r\n    return (dispatch, getState) => {\r\n        let alteredProfile = {\r\n            ...getState().profilePage.profile,\r\n            ...profileChange\r\n        };\r\n        profileAPI.setProfile(alteredProfile).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setProfileData(alteredProfile))\r\n            } else {\r\n                console.log(response.data)\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n};\r\n\r\nexport const setPhotoThunk = (photoFile) => {\r\n    return (dispatch) => {\r\n        profileAPI.setPhoto(photoFile).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let newPhotos = response.data.data.photos;\r\n                dispatch(savePhotoSuccess(newPhotos));\r\n            } else {\r\n                console.log(response.data)\r\n            }\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import { userAPI } from \"../api/api\";\r\n\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_TOTAL_COUNT = 'SET-TOTAL-COUNT';\r\nconst SET_FOLLOW = 'SET-FOLLOW';\r\n\r\nlet initialState = {\r\n    users: null,\r\n    totalCount: null,\r\n};\r\n\r\nconst usersReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_TOTAL_COUNT:\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount\r\n            }\r\n        case SET_FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(item => { \r\n                    if (item.id === action.userId) {\r\n                        item.followed = action.follow;\r\n                        return item\r\n                    } else {\r\n                        return item\r\n                    }})\r\n            }\r\n        default: return state\r\n    }\r\n};\r\n\r\nconst setUsers = (users) => ({type: SET_USERS, users});\r\nconst setTotalCount = (totalCount) => ({type: SET_TOTAL_COUNT, totalCount});\r\nconst setFollowed = (follow, userId) => ({type: SET_FOLLOW, follow, userId});\r\n\r\nexport const getUsersThunk = (page, friend=false, term='',count=10) => {\r\n    return (dispatch) => {\r\n        userAPI.getUsers(page, friend, term, count).then(response => {\r\n            let users = response.data.items;\r\n            let totalCount = response.data.totalCount;\r\n            dispatch(setUsers(users));\r\n            dispatch(setTotalCount(totalCount));\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n};\r\n\r\nexport const setFollowedThunk = (follow, userId) => {\r\n    return (dispatch) => {\r\n        if (follow) {\r\n            userAPI.follow(userId).then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setFollowed(true, userId))\r\n                }\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n        } else {\r\n            userAPI.unfollow(userId).then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setFollowed(false, userId))\r\n                }\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n        }\r\n    }\r\n};\r\n\r\nexport default usersReducer;","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport authReducer from './authReducer';\r\nimport profileReducer from './profileReducer';\r\nimport usersReducer from './usersReducer';\r\n\r\nlet reducers = combineReducers({\r\n    auth: authReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n});\r\n\r\nlet store = createStore(reducers, composeWithDevTools(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport style from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <div className={style.nav}>\r\n\r\n            <NavLink to='/profile' activeClassName={style.activeButton}>\r\n                <div>Моя страница</div>\r\n            </NavLink>\r\n\r\n            <NavLink to='/users' activeClassName={style.activeButton}>\r\n                <div>Пользователи</div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getStatusThunk, setStatusThunk } from '../../../redux/profileReducer';\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    let [status, setStatus] = useState(props.status);\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    let onChangeStatus = (e) => {\r\n        setStatus(e.target.value)\r\n    };\r\n\r\n    let offEditMode = (e) => {\r\n        props.setStatusThunk(e.target.value);\r\n        setEditMode(false);\r\n    };\r\n\r\n    let onEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {props.authId !== props.userId ? <div>{status}</div>\r\n                : editMode\r\n                    ? <input value={status} onChange={onChangeStatus} onBlur={offEditMode} autoFocus={true} ></input>\r\n                    : <div onDoubleClick={onEditMode}>{status || '-----'}</div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    status: state.profilePage.status,\r\n    authId: state.auth.userId\r\n});\r\n\r\nexport default connect(mapStateToProps, { getStatusThunk, setStatusThunk })(ProfileStatus);","import React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport style from './ProfileInfo.module.css';\r\n\r\nconst ProfileContacts = ({ profile }) => {\r\n    return (\r\n        <div>\r\n            <div><b>Обо мне:</b> {profile.aboutMe}</div>\r\n            <div><b>В поисках работы:</b> {profile.lookingForAJob ? 'Да' : 'Нет'}</div>\r\n            <div><b>Мои навыки:</b> {profile.lookingForAJobDescription} </div>\r\n            <div><b>Контакты:</b> {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={style.contacts}><p><b>{key}:   </b><a href={profile.contacts[key]}>{profile.contacts[key] || ''}</a></p></div>\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileContactsForm = ({ profile, setEditMode, setProfileChange }) => {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            aboutMe: profile.aboutMe || '',\r\n            lookingForAJob: profile.lookingForAJob,\r\n            lookingForAJobDescription: profile.lookingForAJobDescription || '',\r\n            contacts: {\r\n                facebook: profile.contacts.facebook || '',\r\n                website: profile.contacts.website || '',\r\n                vk: profile.contacts.vk || '',\r\n                twitter: profile.contacts.twitter || '',\r\n                instagram: profile.contacts.instagram || '',\r\n                youtube: profile.contacts.youtube || '',\r\n                github: profile.contacts.github || '',\r\n                mainLink: profile.contacts.mainLink || '',\r\n            }\r\n        },\r\n        onSubmit: values => {\r\n            setEditMode(false);\r\n            setProfileChange(values);\r\n        }\r\n    });\r\n\r\n    const onChangeRadio = (e) => {\r\n        if (e.target.value === 'Да') {\r\n            formik.values[e.target.name] = true;\r\n        } else if (e.target.value === 'Нет') {\r\n            formik.values[e.target.name] = false;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div>\r\n                <label htmlFor='aboutMe'><b>Обо мне: </b></label>\r\n                <input\r\n                    type='text'\r\n                    id='aboutMe'\r\n                    name='aboutMe'\r\n                    value={formik.aboutMe}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor='lookingForAJob'><b>В поисках работы: </b></label>\r\n                <input\r\n                    type='radio'\r\n                    id='lookingForAJob'\r\n                    name='lookingForAJob'\r\n                    value='Да'\r\n                    onChange={onChangeRadio}\r\n                    defaultChecked={formik.values.lookingForAJob}\r\n                ></input> да\r\n                <input\r\n                    type='radio'\r\n                    id='lookingForAJob'\r\n                    name='lookingForAJob'\r\n                    value='Нет'\r\n                    onChange={onChangeRadio}\r\n                    defaultChecked={!formik.values.lookingForAJob}\r\n                ></input> нет\r\n            </div>\r\n            <div>\r\n                <label htmlFor='lookingForAJobDescription'><b>Мои навыки: </b></label>\r\n                <input\r\n                    id='lookingForAJobDescription'\r\n                    name='lookingForAJobDescription'\r\n                    type='text'\r\n                    value={formik.lookingForAJobDescription}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                />\r\n            </div>\r\n            <div>\r\n                <b>Контакты:</b>\r\n                {Object.keys(profile.contacts).map(key => {\r\n                    return (\r\n                        <div key={key} className={style.contacts}>\r\n                            <p>\r\n                                <label htmlFor={`contacts.${key}`}><b>{key}: </b></label>\r\n                                <input\r\n                                    id={`contacts.${key}`}\r\n                                    name={`contacts.${key}`}\r\n                                    type='text'\r\n                                    value={formik.values.contacts[key]}\r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                />\r\n                            </p>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            <button type='submit' className={style.button}>Сохранить</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ContactsContainer = ({ profile, isOwner, setProfileChange }) => {\r\n\r\n    let [isEditMode, setEditMode] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            {!isOwner ? <ProfileContacts profile={profile} />\r\n                : isEditMode ? <ProfileContactsForm profile={profile} setEditMode={setEditMode} setProfileChange={setProfileChange} />\r\n                    : <ProfileContacts profile={profile} />}\r\n            {!isEditMode && isOwner ? <button onClick={() => { setEditMode(true) }} className={style.button}>Редактировать</button> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactsContainer;","import React, { useState, useEffect } from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileContacts from './ProfileContacts';\r\nimport avatar from '../../Images/avatar.svg';\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    let [largePhoto, setLargePhoto] = useState(props.profile.photos.large);\r\n\r\n    useEffect(() => {\r\n        setLargePhoto(props.profile.photos.large);\r\n    }, [props.profile.photos.large]);\r\n\r\n    const setNewPhoto = (e) => {\r\n        if (e.target.files.length) {\r\n            let photoFile = e.target.files[0];\r\n            props.setPhotoThunk(photoFile);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.profileInfo}>\r\n            <div className={style.photoBox}> \r\n                <div className={style.photo}>\r\n                    <img src={largePhoto || avatar} alt='avatar' ></img>\r\n                    {props.isOwner &&\r\n                        <div>\r\n                            <input id='changePhotoButton' type='file' className={style.changePhotoButton} onChange={setNewPhoto} />\r\n                            <label htmlFor='changePhotoButton' className={style.label + ' ' + style.button}>Изменить фото</label>\r\n                        </div>}\r\n                </div>\r\n            </div>\r\n            <div className={style.infoBox}>\r\n                <div><b>{props.profile.fullName}</b></div>\r\n                <div><b>Статус: </b><ProfileStatus userId={props.profile.userId} /></div>\r\n                <div>\r\n                    <ProfileContacts profile={props.profile} isOwner={props.isOwner}\r\n                        setProfileChange={props.setProfileChange} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst LoginHook = (Component) => {\r\n    const ComponentWithHook = (props) => {\r\n        if (!props.isLoading && !props.isAuth) {\r\n            return <Redirect to={'/login'} />\r\n        }\r\n\r\n        return (\r\n            <Component {...props} />\r\n        )\r\n    };\r\n\r\n    let mapStateToProps = (state) => ({\r\n        isAuth: state.auth.isAuth,\r\n        isLoading: state.auth.isLoading\r\n    });\r\n    \r\n    return connect(mapStateToProps, {})(ComponentWithHook)\r\n};\r\n\r\nexport default LoginHook;","import React from 'react';\r\nimport style from './Preloader.module.css';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={style.loadBox}>\r\n            <div className={style.ldsDualRing}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React, { useEffect, useState } from 'react';\r\nimport { setProfileThunk, getStatusThunk, setProfileChangeThunk, setPhotoThunk } from '../../../redux/profileReducer';\r\nimport { connect } from 'react-redux';\r\nimport ProfileInfo from './ProfileInfo';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport LoginHook from '../../Hooks/LoginHook';\r\nimport Preloader from '../../Images/Preloader';\r\n\r\nconst Profile = React.memo((props) => {\r\n\r\n    let [userId, setUserId] = useState(props.match.params.userId);\r\n    let [isOwner, setIsOwner] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (props.match.params.userId) {\r\n            setUserId(props.match.params.userId);\r\n            setIsOwner(false);\r\n        } else {\r\n            setUserId(props.authUserId);\r\n            setIsOwner(true);\r\n        };\r\n    }, [props.match.params.userId, props.authUserId]);\r\n\r\n    useEffect(() => {\r\n        if (userId && userId !== props.profile.userId) {\r\n            props.setProfileThunk(userId);\r\n            props.getStatusThunk(userId);\r\n        }\r\n    }, [userId]);\r\n\r\n    return (\r\n        <div>\r\n            {!props.profile\r\n                ? <Preloader />\r\n                : <ProfileInfo profile={props.profile} isOwner={isOwner}\r\n                    setPhotoThunk={props.setPhotoThunk}\r\n                    setProfileChange={props.setProfileChangeThunk} />}\r\n        </div>\r\n    )\r\n});\r\n\r\nlet mapStateToProps = (state) => ({\r\n    authUserId: state.auth.userId,\r\n    profile: state.profilePage.profile,\r\n});\r\n\r\nexport default compose(withRouter, LoginHook,\r\n    connect(mapStateToProps, { setProfileThunk, getStatusThunk, setProfileChangeThunk, setPhotoThunk }))(Profile)","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport avatar from '../../Images/avatar.svg';\r\nimport style from './Users.module.css';\r\n\r\nconst User = (props) => {\r\n\r\n    let [followProgress, setFollowProgress] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setFollowProgress(false);\r\n    }, [props.followed])\r\n\r\n    let follow = () => {\r\n        setFollowProgress(true);\r\n        props.setFollowedThunk(true, props.id)\r\n    };\r\n\r\n    let unfollow = () => {\r\n        setFollowProgress(true);\r\n        props.setFollowedThunk(false, props.id)\r\n    };\r\n\r\n    return (\r\n        <div className={style.userGrid}>\r\n            <div className={style.userElem}>\r\n                <NavLink to={'/profile/' + props.id} >\r\n                    {props.photo !== null ?\r\n                        <img src={props.photo} alt='avatar' className={style.avatar}></img> :\r\n                        <img src={avatar} alt='avatar' className={style.avatar}></img>}\r\n                </NavLink>\r\n                <div >\r\n                    {props.isAuth ?\r\n                        props.followed ?\r\n                            <button className={style.followButton} onClick={unfollow} disabled={followProgress} >Unfollow</button> :\r\n                            <button className={style.followButton} onClick={follow} disabled={followProgress} >Follow</button> :\r\n                        null\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={style.userElem}>\r\n                <div>{props.name}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React, { useState } from 'react';\r\nimport style from './Paginator.module.css';\r\n\r\nconst Paginator = (props) => {\r\n    let countPages = Math.ceil(props.totalCount / 10);\r\n    let pages = [];\r\n\r\n    const onClickPage = (e) => {\r\n        let numberOfPage = Number(e.target.textContent);\r\n        props.onSetPage(numberOfPage);\r\n    };\r\n\r\n    for (let i = 1; i <= countPages; i++) {\r\n        let page;\r\n        if (i === props.currentPage) {\r\n            page = <div className={style.button} onClick={onClickPage} key={i}><b> {i} </b></div>;\r\n        } else {\r\n            page = <div className={style.button} onClick={onClickPage} key={i}><span> {i} </span></div>;\r\n        };\r\n        pages.push(page);\r\n    };\r\n\r\n    let weightPortion = 5;\r\n    let countPortions = Math.ceil(pages.length / weightPortion);\r\n\r\n    let [portion, setPortion] = useState(1);\r\n\r\n    let firstPortionsPage = weightPortion * (portion - 1);\r\n    let lastPortionPage = weightPortion * portion;\r\n    let portionsPages = [];\r\n    for (let i = firstPortionsPage; i < lastPortionPage; i++) {\r\n        portionsPages.push(pages[i]);\r\n    };\r\n\r\n    return (\r\n        <div className={style.paginatorBox}>\r\n            <div className={style.pages}>\r\n                {portion !== 1 ? <div onClick={() => setPortion(1)} className={style.button}>First</div> : <div></div>}\r\n                {portion !== 1 ? <div onClick={() => setPortion(portion - 1)} className={style.button}>Prev.</div> : <div></div>}\r\n            \r\n                {portionsPages}\r\n            \r\n                {portion !== countPortions ? <div onClick={() => setPortion(portion + 1)} className={style.button}>Next</div> : ''}\r\n                {portion !== countPortions ? <div onClick={() => setPortion(countPortions)} className={style.button}>Last</div> : ''}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Paginator;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUsersThunk, setFollowedThunk } from '../../../redux/usersReducer';\r\nimport User from './User';\r\nimport Paginator from './Paginator';\r\nimport Preloader from '../../Images/Preloader';\r\n\r\nconst Users = (props) => {\r\n\r\n    let [page, setPage] = useState(1);\r\n    let [users, setUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        props.getUsersThunk(page);\r\n    }, [page]);\r\n\r\n    useEffect(() => {\r\n        let users = [];\r\n        if (props.users) {\r\n            users = props.users.map((user) => {\r\n                return <User id={user.id}\r\n                    photo={user.photos.small}\r\n                    name={user.name}\r\n                    followed={user.followed}\r\n                    setFollowedThunk={props.setFollowedThunk}\r\n                    isSettingFollow={props.isSettingFollow}\r\n                    isAuth={props.isAuth}\r\n                    key={user.id} />\r\n            })\r\n        };\r\n        setUsers(users);\r\n    }, [props.users]);\r\n\r\n    let onSetPage = (page) => {\r\n        setPage(page);\r\n    };\r\n\r\n    if (props.users) {\r\n        return (\r\n            <div>\r\n                <Paginator onSetPage={onSetPage}\r\n                    totalCount={props.totalCount} currentPage={page} />\r\n                {users}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <Preloader />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    users: state.usersPage.users,\r\n    totalCount: state.usersPage.totalCount,\r\n    isSettingFollow: state.usersPage.isSettingFollow,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { getUsersThunk, setFollowedThunk })(Users);","\r\n\r\nconst validator = values => {\r\n\r\n    let errors = {};\r\n\r\n    if (!values.email) {\r\n        errors.email = 'Заполните поле';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Неверный email-адрес';\r\n    };\r\n\r\n    if (!values.password) {\r\n        errors.password = 'Заполните поле';\r\n    };\r\n\r\n    return errors\r\n}\r\n\r\nexport default validator;","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { LoginThunk } from '../../redux/authReducer';\r\nimport validate from '../../validators/validatorLogin';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport style from './Login.module.css';\r\n\r\nconst Login = (props) => {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            captcha: ''\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n            props.LoginThunk(values)\r\n        }\r\n    });\r\n\r\n    if (props.isAuth && !props.isLoading) {\r\n        return <Redirect to='/profile' />\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit} className={style.gridBox}>\r\n            <label htmlFor='email'>Email</label>\r\n            <input\r\n                id='email'\r\n                name='email'\r\n                type='email'\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.email}\r\n            />\r\n            {formik.touched.email && formik.errors.email\r\n                ? <div className={style.error}>{formik.errors.email}</div>\r\n                : <div></div>}\r\n            <label htmlFor='password'>Password</label>\r\n            <input\r\n                id='password'\r\n                name='password'\r\n                type='password'\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.password}\r\n            />\r\n            {formik.touched.password && formik.errors.password\r\n                ? <div className={style.error}>{formik.errors.password}</div>\r\n                : <div></div>}\r\n            {props.captchaURL && <img src={props.captchaURL} alt='captcha' />}\r\n            {props.captchaURL &&\r\n                <input id='captcha' name='captcha' type='text' \r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.captcha}\r\n                />\r\n            }\r\n            <button type='submit'>Войти</button>\r\n            {props.errorSubmit && <div className={style.error} >{props.errorSubmit}</div>}\r\n        </form>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    isLoading: state.auth.isLoading,\r\n    captchaURL: state.auth.captchaURL,\r\n    errorSubmit: state.auth.errorSubmit\r\n})\r\n\r\nexport default connect(mapStateToProps, { LoginThunk })(Login);\r\n","import React, { PureComponent } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { authUserThunk } from '../../redux/authReducer';\r\nimport { connect } from 'react-redux';\r\nimport Navbar from '../Leftbar/Navbar';\r\nimport Profile from './Profile/Profile';\r\nimport Users from './Users/Users';\r\nimport style from './MainContainer.module.css';\r\nimport Login from '../Login/Login';\r\n\r\nclass MainContainer extends PureComponent {\r\n\r\n    componentDidMount() {\r\n        this.props.authUserThunk();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={style.main}>\r\n                <Navbar />\r\n                <Switch>\r\n                    <Redirect exact from='/' to='/profile' />\r\n                    <Route path='/profile/:userId?' render={() => <Profile />} />\r\n                    <Route path='/users' render={() => <Users />} />\r\n                    <Route path='/login' render={() => <Login />} />\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    isLoading: state.auth.isLoading\r\n});\r\n\r\nexport default connect(mapStateToProps, { authUserThunk })(MainContainer)","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport Header from './Components/Header/Header';\nimport Footer from './Components/Footer/Footer';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport MainConteiner from './Components/Contentbar/MainContainer';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <HashRouter>\n          <div className=\"wrapper\">\n            <Header />\n            <MainConteiner />\n            <Footer />\n          </div>\n        </HashRouter>\n      </Provider>\n    );\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}